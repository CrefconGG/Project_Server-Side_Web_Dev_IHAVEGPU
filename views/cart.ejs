<%- include('index.ejs') %>
  <title>My Cart</title>
  </head>

  <body>
    <div class="navbar">
      <%- include('nav.ejs') %>
      <div class="profile">
        <% if (user) { %>
          <span>Welcome, <%= user.role %>
              <%= user.name %></span>
          <% if (user.role==='admin' ) { %>
            <a href="/admin/orders">All Orders</a>
            <% } else { %>
              <a href="/orders">My Orders</a>
              <% } %>
                <a href="/logout">Logout</a>
                <% } else { %>
                  <a href="/login">Login</a>
                  <% } %>
      </div>
    </div>

    <div class="container">
      <h1>Your Shopping Cart</h1>

      <% if (items.length===0) { %>
        <p style="text-align:center; margin-top:40px;">
          Your cart is empty.
          <a href="/" style="color:#2a9d8f; text-decoration:none;">Start Shopping</a>
        </p>
        <% } else { %>
          <div class="product-list">
            <% items.forEach(function(product) { %>
              <div class="product-card">
                <img src="<%= product.image %>" alt="<%= product.name %>">
                <h2>
                  <%= product.name %>
                </h2>
                <p><strong>$<%= product.price.toFixed(2) %></strong></p>

                <!-- ‡∏õ‡∏£‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ -->
                <div style="margin:10px 0;">
                  <label>Quantity:</label>
                  <input type="number" class="qty-input" data-id="<%= product.id %>" value="<%= product.quantity %>"
                    min="1" style="width:60px; text-align:center;">
                </div>

                <p>Subtotal: <strong>$<%= product.subtotal.toFixed(2) %></strong></p>

                <!-- ‡∏õ‡∏∏‡πà‡∏° Remove -->
                <button class="remove-btn" data-id="<%= product.id %>"
                  style="background-color:#d9534f; margin-top:10px;">
                  Remove
                </button>
              </div>
              <% }) %>
          </div>

          <!-- ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏° -->
          <div style="text-align:right; margin-top:30px;">
            <h2>Total: $<%= total.toFixed(2) %>
            </h2>

            <!-- ‡∏õ‡∏∏‡πà‡∏° Clear Cart -->
            <button id="clearCartBtn" style="background-color:#555; margin-top:10px;">Clear Cart</button>

            <!-- ‡∏õ‡∏∏‡πà‡∏° Checkout -->
            <button id="checkoutBtn" style="background-color:#2a9d8f; margin-left:10px;">
              Checkout
            </button>
          </div>
          <% } %>
    </div>

    <!-- ‚úÖ Script ‡∏™‡πà‡∏ß‡∏ô‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° -->
    <script>
      // üóëÔ∏è Remove item
      document.querySelectorAll(".remove-btn").forEach(btn => {
        btn.addEventListener("click", async () => {
          const productID = btn.getAttribute("data-id");
          if (!confirm("Remove this item from cart?")) return;

          try {
            const res = await fetch(`/api/cart/items/${productID}`, {
              method: "DELETE",
              headers: { "Content-Type": "application/json" }
            });

            if (res.ok) {
              alert("üóëÔ∏è Item removed!");
              location.reload();
            } else {
              const err = await res.json();
              alert("‚ùå " + (err.error || res.statusText));
            }
          } catch (error) {
            console.error(error);
            alert("‚ö†Ô∏è Error removing item");
          }
        });
      });

      // üîÅ Update quantity
      document.querySelectorAll(".qty-input").forEach(input => {
        input.addEventListener("change", async () => {
          const productID = input.getAttribute("data-id");
          const quantity = parseInt(input.value);

          if (isNaN(quantity) || quantity < 1) {
            alert("‚ö†Ô∏è Quantity must be at least 1");
            input.value = 1;
            return;
          }

          try {
            const res = await fetch(`/api/cart/items/${productID}`, {
              method: "PUT",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ quantity })
            });

            if (res.ok) {
              location.reload();
            } else {
              const err = await res.json();
              alert("‚ùå " + (err.error || res.statusText));
            }
          } catch (error) {
            console.error(error);
            alert("‚ö†Ô∏è Error updating quantity");
          }
        });
      });

      // üßπ Clear cart
      document.getElementById("clearCartBtn")?.addEventListener("click", async () => {
        if (!confirm("Clear all items in your cart?")) return;

        try {
          const res = await fetch(`/api/cart`, {
            method: "DELETE",
            headers: { "Content-Type": "application/json" }
          });

          if (res.ok) {
            alert("üß∫ Cart cleared!");
            location.reload();
          } else {
            const err = await res.json();
            alert("‚ùå " + (err.error || res.statusText));
          }
        } catch (error) {
          console.error(error);
          alert("‚ö†Ô∏è Error clearing cart");
        }
      });

      // üí≥ Checkout - create order
      document.getElementById("checkoutBtn")?.addEventListener("click", async () => {
        if (!confirm("Proceed to checkout?")) return;

        try {
          const res = await fetch(`/api/orders`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
          });

          const data = await res.json();

          if (res.ok) {
            alert("‚úÖ Order created successfully!");
            window.location.href = "/orders"; // ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ order
          } else {
            alert("‚ùå " + (data.message || "Failed to create order"));
          }
        } catch (error) {
          console.error(error);
          alert("‚ö†Ô∏è Error creating order");
        }
      });
    </script>
  </body>

  </html>